// <auto-generated />
using System;
using Capycom;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Capycom.Migrations
{
    [DbContext(typeof(CapycomContext))]
    partial class CapycomContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Capycom.CpcmCity", b =>
                {
                    b.Property<Guid>("CpcmCityId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_CityID");

                    b.Property<string>("CpcmCityName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("CPCM_CityName");

                    b.HasKey("CpcmCityId");

                    b.ToTable("CPCM_CITIES", (string)null);
                });

            modelBuilder.Entity("Capycom.CpcmComment", b =>
                {
                    b.Property<Guid>("CpcmCommentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_CommentID");

                    b.Property<DateTime>("CpcmCommentCreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CPCM_CommentCreationDate");

                    b.Property<Guid?>("CpcmCommentFather")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_CommentFather");

                    b.Property<string>("CpcmCommentText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_CommentText");

                    b.Property<Guid>("CpcmPostId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_PostID");

                    b.Property<Guid>("CpcmUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_UserID");

                    b.HasKey("CpcmCommentId");

                    b.HasIndex("CpcmCommentFather");

                    b.HasIndex("CpcmPostId");

                    b.ToTable("CPCM_COMMENTS", (string)null);
                });

            modelBuilder.Entity("Capycom.CpcmGroup", b =>
                {
                    b.Property<Guid>("CpcmGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_GroupID");

                    b.Property<string>("CpcmGroupAbout")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_GroupAbout");

                    b.Property<Guid?>("CpcmGroupCity")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_GroupCity");

                    b.Property<string>("CpcmGroupCovet")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_GroupCovet");

                    b.Property<string>("CpcmGroupImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_GroupImage");

                    b.Property<string>("CpcmGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_GroupName");

                    b.Property<string>("CpcmGroupNickName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("CPCM_GroupNickName");

                    b.Property<int>("CpcmGroupSubject")
                        .HasColumnType("int")
                        .HasColumnName("CPCM_GroupSubject");

                    b.Property<string>("CpcmGroupTelNum")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_GroupTelNum");

                    b.HasKey("CpcmGroupId");

                    b.HasIndex("CpcmGroupSubject");

                    b.HasIndex(new[] { "CpcmGroupNickName" }, "IX_CPCM_GROUPS")
                        .IsUnique()
                        .HasFilter("[CPCM_GroupNickName] IS NOT NULL");

                    b.ToTable("CPCM_GROUPS", (string)null);
                });

            modelBuilder.Entity("Capycom.CpcmGroupRole", b =>
                {
                    b.Property<int>("CpcmRoleId")
                        .HasColumnType("int")
                        .HasColumnName("CPCM_RoleID");

                    b.Property<bool>("CpcmCanDelPost")
                        .HasColumnType("bit")
                        .HasColumnName("CPCM_CanDelPost");

                    b.Property<bool>("CpcmCanEditGroup")
                        .HasColumnType("bit")
                        .HasColumnName("CPCM_CanEditGroup");

                    b.Property<bool>("CpcmCanEditPost")
                        .HasColumnType("bit")
                        .HasColumnName("CPCm_CanEditPost");

                    b.Property<bool>("CpcmCanMakePost")
                        .HasColumnType("bit")
                        .HasColumnName("CPCM_CanMakePost");

                    b.Property<string>("CpcmRoleName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("CPCM_RoleName");

                    b.HasKey("CpcmRoleId");

                    b.ToTable("CPCM_GroupRoles", (string)null);
                });

            modelBuilder.Entity("Capycom.CpcmGroupfollower", b =>
                {
                    b.Property<Guid>("CpcmGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_GroupID");

                    b.Property<Guid>("CpcmUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_UserID");

                    b.Property<int>("CpcmUserRole")
                        .HasColumnType("int")
                        .HasColumnName("CPCM_UserRole");

                    b.HasKey("CpcmGroupId", "CpcmUserId");

                    b.HasIndex("CpcmUserId");

                    b.HasIndex("CpcmUserRole");

                    b.ToTable("CPCM_GROUPFOLLOWERS", (string)null);
                });

            modelBuilder.Entity("Capycom.CpcmGroupsubject", b =>
                {
                    b.Property<int>("CpcmSubjectId")
                        .HasColumnType("int")
                        .HasColumnName("CPCM_SubjectID");

                    b.Property<string>("CpcmSubjectName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("CPCM_SubjectName");

                    b.HasKey("CpcmSubjectId");

                    b.ToTable("CPCM_GROUPSUBJECTS", (string)null);
                });

            modelBuilder.Entity("Capycom.CpcmImage", b =>
                {
                    b.Property<Guid>("CpcmImageId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_ImageID");

                    b.Property<Guid?>("CpcmCommentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_CommentID");

                    b.Property<int>("CpcmImageOrder")
                        .HasColumnType("int")
                        .HasColumnName("CPCM_ImageOrder");

                    b.Property<string>("CpcmImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_ImagePath");

                    b.Property<Guid?>("CpcmPostId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_PostID");

                    b.HasKey("CpcmImageId");

                    b.HasIndex("CpcmCommentId");

                    b.HasIndex("CpcmPostId");

                    b.ToTable("CPCM_IMAGES", (string)null);
                });

            modelBuilder.Entity("Capycom.CpcmPost", b =>
                {
                    b.Property<Guid>("CpcmPostId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_PostID");

                    b.Property<Guid?>("CpcmGroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_GroupID");

                    b.Property<DateTime>("CpcmPostCreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CPCM_PostCreationDate");

                    b.Property<Guid?>("CpcmPostFather")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_PostFather");

                    b.Property<DateTime?>("CpcmPostPublishedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CPCM_PostPublishedDate");

                    b.Property<string>("CpcmPostText")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_PostText");

                    b.Property<Guid?>("CpcmUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_UserID");

                    b.HasKey("CpcmPostId");

                    b.HasIndex("CpcmPostFather");

                    b.ToTable("CPCM_POSTS", (string)null);
                });

            modelBuilder.Entity("Capycom.CpcmRole", b =>
                {
                    b.Property<int>("CpcmRoleId")
                        .HasColumnType("int")
                        .HasColumnName("CPCM_RoleID");

                    b.Property<bool>("CpcmCanAddComments")
                        .HasColumnType("bit")
                        .HasColumnName("CPCM_CanAddComments");

                    b.Property<bool>("CpcmCanAddGroups")
                        .HasColumnType("bit")
                        .HasColumnName("CPCM_CanAddGroups");

                    b.Property<bool>("CpcmCanAddPost")
                        .HasColumnType("bit")
                        .HasColumnName("CPCM_CanAddPost");

                    b.Property<bool>("CpcmCanDelGroupsPosts")
                        .HasColumnType("bit")
                        .HasColumnName("CPCM_CanDelGroupsPosts");

                    b.Property<bool>("CpcmCanDelUsersComments")
                        .HasColumnType("bit")
                        .HasColumnName("CPCM_CanDelUsersComments");

                    b.Property<bool>("CpcmCanDelUsersPosts")
                        .HasColumnType("bit")
                        .HasColumnName("CPCM_CanDelUsersPosts");

                    b.Property<bool>("CpcmCanEditGroups")
                        .HasColumnType("bit")
                        .HasColumnName("CPCM_CanEditGroups");

                    b.Property<bool>("CpcmCanEditRoles")
                        .HasColumnType("bit")
                        .HasColumnName("CPCM_CanEditRoles");

                    b.Property<bool>("CpcmCanEditUsers")
                        .HasColumnType("bit")
                        .HasColumnName("CPCM_CanEditUsers");

                    b.Property<string>("CpcmRoleName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("CPCM_RoleName");

                    b.HasKey("CpcmRoleId");

                    b.ToTable("CPCM_ROLES", (string)null);
                });

            modelBuilder.Entity("Capycom.CpcmSchool", b =>
                {
                    b.Property<Guid>("CpcmSchooldId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_SchooldID");

                    b.Property<string>("CpcmSchoolName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("CPCM_SchoolName");

                    b.HasKey("CpcmSchooldId");

                    b.ToTable("CPCM_SCHOOLS", (string)null);
                });

            modelBuilder.Entity("Capycom.CpcmUniversity", b =>
                {
                    b.Property<Guid>("CpcmUniversityId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_UniversityID");

                    b.Property<string>("CpcmUniversityName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("CPCM_UniversityName");

                    b.HasKey("CpcmUniversityId");

                    b.ToTable("CPCM_UNIVERSITIES", (string)null);
                });

            modelBuilder.Entity("Capycom.CpcmUser", b =>
                {
                    b.Property<Guid>("CpcmUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_UserId");

                    b.Property<string>("CpcmUserAbout")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_UserAbout");

                    b.Property<string>("CpcmUserAdditionalName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_UserAdditionalName");

                    b.Property<string>("CpcmUserBooks")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_UserBooks");

                    b.Property<Guid?>("CpcmUserCity")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_UserCity");

                    b.Property<string>("CpcmUserCoverPath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_UserCoverPath");

                    b.Property<string>("CpcmUserEmail")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("CPCM_UserEmail");

                    b.Property<string>("CpcmUserFilms")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_UserFilms");

                    b.Property<string>("CpcmUserFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_UserFirstName");

                    b.Property<string>("CpcmUserImagePath")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_UserImagePath");

                    b.Property<string>("CpcmUserMusics")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_UserMusics");

                    b.Property<string>("CpcmUserNickName")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("CPCM_UserNickName");

                    b.Property<byte[]>("CpcmUserPwdHash")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varbinary(32)")
                        .HasColumnName("CPCM_UserPwdHash");

                    b.Property<int>("CpcmUserRole")
                        .HasColumnType("int")
                        .HasColumnName("CPCM_UserRole");

                    b.Property<string>("CpcmUserSalt")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("CPCM_UserSalt");

                    b.Property<Guid?>("CpcmUserSchool")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_UserSchool");

                    b.Property<string>("CpcmUserSecondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_UserSecondName");

                    b.Property<string>("CpcmUserSite")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CPCM_UserSite");

                    b.Property<string>("CpcmUserTelNum")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("CPCM_UserTelNum");

                    b.Property<Guid?>("CpcmUserUniversity")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_UserUniversity");

                    b.HasKey("CpcmUserId");

                    b.HasIndex("CpcmUserCity");

                    b.HasIndex("CpcmUserRole");

                    b.HasIndex("CpcmUserSchool");

                    b.HasIndex("CpcmUserUniversity");

                    b.HasIndex(new[] { "CpcmUserEmail" }, "IX_CPCM_USERS")
                        .IsUnique();

                    b.HasIndex(new[] { "CpcmUserTelNum" }, "IX_CPCM_USERS_1")
                        .IsUnique();

                    b.HasIndex(new[] { "CpcmUserId" }, "IX_CPCM_USERS_2")
                        .IsUnique();

                    b.HasIndex(new[] { "CpcmUserNickName" }, "IX_CPCM_USERS_3")
                        .IsUnique()
                        .HasFilter("[CPCM_UserNickName] IS NOT NULL");

                    b.ToTable("CPCM_USERS", (string)null);
                });

            modelBuilder.Entity("Capycom.CpcmUserfollower", b =>
                {
                    b.Property<Guid>("CpcmFollowersId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_FollowersID");

                    b.Property<Guid>("CpcmFollowerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_FollowerID");

                    b.Property<Guid>("CpcmUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_UserID");

                    b.HasKey("CpcmFollowersId");

                    b.HasIndex("CpcmFollowerId");

                    b.HasIndex("CpcmUserId");

                    b.ToTable("CPCM_USERFOLLOWERS", (string)null);
                });

            modelBuilder.Entity("Capycom.CpcmUserfriend", b =>
                {
                    b.Property<Guid>("CmcpUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CMCP_UserID");

                    b.Property<Guid>("CmcpFriendId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CMCP_FriendID");

                    b.Property<bool>("CpcmFriendRequestStatus")
                        .HasColumnType("bit")
                        .HasColumnName("CPCM_FriendRequestStatus");

                    b.HasKey("CmcpUserId", "CmcpFriendId");

                    b.HasIndex("CmcpFriendId");

                    b.ToTable("CPCM_USERFRIENDS", (string)null);
                });

            modelBuilder.Entity("CpcmPostlike", b =>
                {
                    b.Property<Guid>("CpcmPostId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_PostID");

                    b.Property<Guid>("CpcmUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_UserID");

                    b.HasKey("CpcmPostId", "CpcmUserId");

                    b.HasIndex("CpcmUserId");

                    b.ToTable("CPCM_POSTLIKES", (string)null);
                });

            modelBuilder.Entity("CpcmPostrepost", b =>
                {
                    b.Property<Guid>("CpcmPostId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_PostID");

                    b.Property<Guid>("CpcmUserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CPCM_UserID");

                    b.HasKey("CpcmPostId", "CpcmUserId");

                    b.HasIndex("CpcmUserId");

                    b.ToTable("CPCM_POSTREPOSTS", (string)null);
                });

            modelBuilder.Entity("Capycom.CpcmComment", b =>
                {
                    b.HasOne("Capycom.CpcmComment", "CpcmCommentFatherNavigation")
                        .WithMany("InverseCpcmCommentFatherNavigation")
                        .HasForeignKey("CpcmCommentFather")
                        .HasConstraintName("FK_CPCM_COMMENTS_CPCM_COMMENTS");

                    b.HasOne("Capycom.CpcmPost", "CpcmPost")
                        .WithMany("CpcmComments")
                        .HasForeignKey("CpcmPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CPCM_COMMENTS_CPCM_POSTS");

                    b.Navigation("CpcmCommentFatherNavigation");

                    b.Navigation("CpcmPost");
                });

            modelBuilder.Entity("Capycom.CpcmGroup", b =>
                {
                    b.HasOne("Capycom.CpcmGroupsubject", "CpcmGroupSubjectNavigation")
                        .WithMany("CpcmGroups")
                        .HasForeignKey("CpcmGroupSubject")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CPCM_GROUPS_CPCM_GROUPSUBJECTS");

                    b.Navigation("CpcmGroupSubjectNavigation");
                });

            modelBuilder.Entity("Capycom.CpcmGroupfollower", b =>
                {
                    b.HasOne("Capycom.CpcmGroup", "CpcmGroup")
                        .WithMany("CpcmGroupfollowers")
                        .HasForeignKey("CpcmGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CPCM_GROUPFOLLOWERS_CPCM_GROUPS");

                    b.HasOne("Capycom.CpcmUser", "CpcmUser")
                        .WithMany("CpcmGroupfollowers")
                        .HasForeignKey("CpcmUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CPCM_GROUPFOLLOWERS_CPCM_USERS");

                    b.HasOne("Capycom.CpcmGroupRole", "CpcmUserRoleNavigation")
                        .WithMany("CpcmGroupfollowers")
                        .HasForeignKey("CpcmUserRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CPCM_GROUPFOLLOWERS_CPCM_GroupRoles");

                    b.Navigation("CpcmGroup");

                    b.Navigation("CpcmUser");

                    b.Navigation("CpcmUserRoleNavigation");
                });

            modelBuilder.Entity("Capycom.CpcmImage", b =>
                {
                    b.HasOne("Capycom.CpcmComment", "CpcmComment")
                        .WithMany("CpcmImages")
                        .HasForeignKey("CpcmCommentId")
                        .HasConstraintName("FK_CPCM_IMAGES_CPCM_COMMENTS");

                    b.HasOne("Capycom.CpcmPost", "CpcmPost")
                        .WithMany("CpcmImages")
                        .HasForeignKey("CpcmPostId")
                        .HasConstraintName("FK_CPCM_IMAGES_CPCM_POSTS");

                    b.Navigation("CpcmComment");

                    b.Navigation("CpcmPost");
                });

            modelBuilder.Entity("Capycom.CpcmPost", b =>
                {
                    b.HasOne("Capycom.CpcmPost", "CpcmPostFatherNavigation")
                        .WithMany("InverseCpcmPostFatherNavigation")
                        .HasForeignKey("CpcmPostFather")
                        .HasConstraintName("FK_CPCM_POSTS_CPCM_POSTS");

                    b.Navigation("CpcmPostFatherNavigation");
                });

            modelBuilder.Entity("Capycom.CpcmUser", b =>
                {
                    b.HasOne("Capycom.CpcmCity", "CpcmUserCityNavigation")
                        .WithMany("CpcmUsers")
                        .HasForeignKey("CpcmUserCity")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_CPCM_USERS_CPCM_CITIES");

                    b.HasOne("Capycom.CpcmRole", "CpcmUserRoleNavigation")
                        .WithMany("CpcmUsers")
                        .HasForeignKey("CpcmUserRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CPCM_USERS_CPCM_ROLES");

                    b.HasOne("Capycom.CpcmSchool", "CpcmUserSchoolNavigation")
                        .WithMany("CpcmUsers")
                        .HasForeignKey("CpcmUserSchool")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_CPCM_USERS_CPCM_SCHOOLS");

                    b.HasOne("Capycom.CpcmUniversity", "CpcmUserUniversityNavigation")
                        .WithMany("CpcmUsers")
                        .HasForeignKey("CpcmUserUniversity")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK_CPCM_USERS_CPCM_UNIVERSITIES");

                    b.Navigation("CpcmUserCityNavigation");

                    b.Navigation("CpcmUserRoleNavigation");

                    b.Navigation("CpcmUserSchoolNavigation");

                    b.Navigation("CpcmUserUniversityNavigation");
                });

            modelBuilder.Entity("Capycom.CpcmUserfollower", b =>
                {
                    b.HasOne("Capycom.CpcmUser", "CpcmFollower")
                        .WithMany("CpcmUserfollowerCpcmFollowers")
                        .HasForeignKey("CpcmFollowerId")
                        .IsRequired()
                        .HasConstraintName("FK_CPCM_USERFOLLOWERS_CPCM_USERS1");

                    b.HasOne("Capycom.CpcmUser", "CpcmUser")
                        .WithMany("CpcmUserfollowerCpcmUsers")
                        .HasForeignKey("CpcmUserId")
                        .IsRequired()
                        .HasConstraintName("FK_CPCM_USERFOLLOWERS_CPCM_USERS");

                    b.Navigation("CpcmFollower");

                    b.Navigation("CpcmUser");
                });

            modelBuilder.Entity("Capycom.CpcmUserfriend", b =>
                {
                    b.HasOne("Capycom.CpcmUser", "CmcpFriend")
                        .WithMany("CpcmUserfriendCmcpFriends")
                        .HasForeignKey("CmcpFriendId")
                        .IsRequired()
                        .HasConstraintName("FK_CPCM_USERFRIENDS_CPCM_USERS1");

                    b.HasOne("Capycom.CpcmUser", "CmcpUser")
                        .WithMany("CpcmUserfriendCmcpUsers")
                        .HasForeignKey("CmcpUserId")
                        .IsRequired()
                        .HasConstraintName("FK_CPCM_USERFRIENDS_CPCM_USERS");

                    b.Navigation("CmcpFriend");

                    b.Navigation("CmcpUser");
                });

            modelBuilder.Entity("CpcmPostlike", b =>
                {
                    b.HasOne("Capycom.CpcmPost", null)
                        .WithMany()
                        .HasForeignKey("CpcmPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CPCM_POSTLIKES_CPCM_POSTS");

                    b.HasOne("Capycom.CpcmUser", null)
                        .WithMany()
                        .HasForeignKey("CpcmUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CPCM_POSTLIKES_CPCM_USERS");
                });

            modelBuilder.Entity("CpcmPostrepost", b =>
                {
                    b.HasOne("Capycom.CpcmPost", null)
                        .WithMany()
                        .HasForeignKey("CpcmPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CPCM_POSTREPOSTS_CPCM_POSTS");

                    b.HasOne("Capycom.CpcmUser", null)
                        .WithMany()
                        .HasForeignKey("CpcmUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CPCM_POSTREPOSTS_CPCM_USERS");
                });

            modelBuilder.Entity("Capycom.CpcmCity", b =>
                {
                    b.Navigation("CpcmUsers");
                });

            modelBuilder.Entity("Capycom.CpcmComment", b =>
                {
                    b.Navigation("CpcmImages");

                    b.Navigation("InverseCpcmCommentFatherNavigation");
                });

            modelBuilder.Entity("Capycom.CpcmGroup", b =>
                {
                    b.Navigation("CpcmGroupfollowers");
                });

            modelBuilder.Entity("Capycom.CpcmGroupRole", b =>
                {
                    b.Navigation("CpcmGroupfollowers");
                });

            modelBuilder.Entity("Capycom.CpcmGroupsubject", b =>
                {
                    b.Navigation("CpcmGroups");
                });

            modelBuilder.Entity("Capycom.CpcmPost", b =>
                {
                    b.Navigation("CpcmComments");

                    b.Navigation("CpcmImages");

                    b.Navigation("InverseCpcmPostFatherNavigation");
                });

            modelBuilder.Entity("Capycom.CpcmRole", b =>
                {
                    b.Navigation("CpcmUsers");
                });

            modelBuilder.Entity("Capycom.CpcmSchool", b =>
                {
                    b.Navigation("CpcmUsers");
                });

            modelBuilder.Entity("Capycom.CpcmUniversity", b =>
                {
                    b.Navigation("CpcmUsers");
                });

            modelBuilder.Entity("Capycom.CpcmUser", b =>
                {
                    b.Navigation("CpcmGroupfollowers");

                    b.Navigation("CpcmUserfollowerCpcmFollowers");

                    b.Navigation("CpcmUserfollowerCpcmUsers");

                    b.Navigation("CpcmUserfriendCmcpFriends");

                    b.Navigation("CpcmUserfriendCmcpUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
