@model CpcmUser
<style>
	.profile-block {
		background-color: #f7f7f7;
	}
</style>
@if (!@Model.CpcmUserBanned)
{
	<div class="row">
		<div class="pt-2 pb-2 profile-block card mb-2">
			<div class="mx-auto" style="width: 256px; height: 256px;">
				@if (@Model.CpcmUserImagePath != string.Empty)
				{
					<img src="@Url.Content(@Model.CpcmUserImagePath)" class="img-fluid rounded h-100 w-100" alt="Иконка пользователя" style="object-fit: cover;">
				}
				else
				{
					<img src="\uploads\default.png" class="img-fluid rounded h-100 w-100" alt="Иконка пользователя" style="object-fit: cover;">
				}
			</div>

			<div class="text-center">
				<h4 class="mb-0">@Model.CpcmUserFirstName @Model.CpcmUserSecondName @Model.CpcmUserAdditionalName</h4>
				<div id="userID" hidden>@Model.CpcmUserId</div>
				@if (Model.CpcmUserNickName != null)
				{
					<small class="text-muted">@@<a href="~/User/Index?NickName=@Model.CpcmUserNickName">@Model.CpcmUserNickName</a></small>
				}
			</div>
			<div class="mt-1">
				<ul class="list-group list-group-flush">
					@if (@Model.CpcmUserAbout != string.Empty)
					{
						<p class="m-0">О себе</p>
						<li class="list-group-item profile-block">@Model.CpcmUserAbout</li>
					}
					@if (@Model.CpcmUserCity.HasValue)
					{
						<p class="m-0">Город</p>
						<li class="list-group-item profile-block">@Model.CpcmUserCityNavigation.CpcmCityName</li>
					}
					@if (@Model.CpcmUserUniversity.HasValue)
					{
						<p class="m-0">Университет</p>
						<li class="list-group-item profile-block">@Model.CpcmUserUniversityNavigation.CpcmUniversityName</li>
					}
					@if (@Model.CpcmUserSchool.HasValue)
					{
						<p class="m-0">Школа</p>
						<li class="list-group-item profile-block">@Model.CpcmUserSchoolNavigation.CpcmSchoolName</li>
					}
					@if (@Model.CpcmUserBooks != string.Empty)
					{
						<p class="m-0">Книги</p>
						<li class="list-group-item profile-block">@Model.CpcmUserBooks</li>
					}
					@if (@Model.CpcmUserFilms != string.Empty)
					{
						<p class="m-0">Фильмы</p>
						<li class="list-group-item profile-block">@Model.CpcmUserFilms</li>
					}
					@if (@Model.CpcmUserMusics != string.Empty)
					{
						<p class="m-0">Музыка</p>
						<li class="list-group-item profile-block">@Model.CpcmUserMusics</li>
					}
					@if (@Model.CpcmUserSite != string.Empty)
					{
						<p class="m-0">Сайт</p>
						if (@Model.CpcmUserSite.StartsWith("http://") || @Model.CpcmUserSite.StartsWith("https://"))
						{
								<li class="list-group-item profile-block">
									<a href="@Model.CpcmUserSite.ToString()">
										@Model.CpcmUserSite
									</a>
								</li>
						}
						else
						{
							<li class="list-group-item profile-block">
								<a href="http://@Model.CpcmUserSite.ToString()">
									@Model.CpcmUserSite
								</a>
							</li>
						}
					}
				</ul>
			</div>
		</div>
	</div>
	@if (User.Identity.IsAuthenticated && Model.CpcmUserId.ToString() != User.FindAll(x => x.Type == "CpcmUserId").FirstOrDefault().Value)
	{
		<div class="row mb-1">
			@switch (Model.IsFriend)
			{
				case Capycom.Enums.FriendStatusEnum.NoFriendRequest:
					<button class="btn btn-outline-primary mb-1" id="friendButton" onclick="sendFriendRequest()">Добавить в друзья</button>
					break;
				case Capycom.Enums.FriendStatusEnum.OurNotAnswered:
				case Capycom.Enums.FriendStatusEnum.OurRejected:
					<button class="btn btn-primary mb-1" id="friendButton" onclick="deleteFriendRequest()">Отозвать заявку в друзья</button>
					break;
				case Capycom.Enums.FriendStatusEnum.HisApproved:
				case Capycom.Enums.FriendStatusEnum.OurApproved:
					<button class="btn btn-primary mb-1" id="friendButton" onclick="deleteFriendRequest()">Удалить из друзей</button>
					break;
				case Capycom.Enums.FriendStatusEnum.HisNotAnswered:
				case Capycom.Enums.FriendStatusEnum.HisRejected:
					<button class="btn btn-primary mb-1" id="friendButton" onclick="asnwerFriendRequest()">Принять заявку в друзья</button>
					break;
				default:
					<p class="text-danger text-center border">На сервере произошла ошибка, функция добавления в друзья временно недоступна.</p>
					break;
			}
			@if (!Model.IsFollowing)
			{
				<button class="btn btn-outline-primary mb-1" id="subscribeButton" onclick="follow()">Подписаться</button>
			}
			else
			{
				<button class="btn btn-outline-primary mb-1" id="subscribeButton" onclick="unfollow()">Отписаться</button>
			}
		</div>
	}
	@if (User.Identity.IsAuthenticated && Model.CpcmUserId.ToString() == User.FindAll(x => x.Type == "CpcmUserId").FirstOrDefault().Value)
	{
		<div class="row">
			<a class="btn btn-secondary mb-1" asp-controller="User" asp-action="ViewFriendRequests">Заявки в друзья</a>
		</div>
	}
	<div class="row">
		<a class="btn btn-outline-secondary mb-1" asp-controller="User" asp-action="Friends" asp-route-NickName="@Model.CpcmUserNickName">Друзья</a>
		<a class="btn btn-outline-secondary mb-1" asp-controller="User" asp-action="Followers" asp-route-NickName="@Model.CpcmUserNickName">Подписчики</a>
	</div>
}
else
{
	<div class="row">
		<div class="pt-2 pb-2 profile-block card mb-2">
			<div class="mx-auto" style="width: 256px; height: 256px;">
				<img src="\uploads\default_banned.png" class="img-fluid rounded h-100 w-100" alt="Иконка пользователя" style="object-fit: cover;">
			</div>

			<div class="text-center">
				<h4 class="mb-0">Пользователь забаннен советом капибар</h4>
			</div>
		</div>
	</div>
	@if (User.Identity.IsAuthenticated && Model.CpcmUserId.ToString() != User.FindAll(x => x.Type == "CpcmUserId").FirstOrDefault().Value)
	{
		<div class="row mb-1">
			@switch (Model.IsFriend)
			{
				case Capycom.Enums.FriendStatusEnum.OurNotAnswered:
				case Capycom.Enums.FriendStatusEnum.OurRejected:
					<button class="btn btn-primary mb-1" id="friendButton" onclick="deleteFriendRequest()">Отозвать заявку в друзья</button>
					break;
				case Capycom.Enums.FriendStatusEnum.HisApproved:
				case Capycom.Enums.FriendStatusEnum.OurApproved:
					<button class="btn btn-primary mb-1" id="friendButton" onclick="deleteFriendRequest()">Удалить из друзей</button>
					break;
				default:
					<p class="text-danger text-center border">На сервере произошла ошибка, функция добавления в друзья временно недоступна.</p>
					break;
			}
			@if (Model.IsFollowing)
			{
				<button class="btn btn-outline-primary mb-1" id="subscribeButton" onclick="unfollow()">Отписаться</button>
			}
		</div>
	}
}